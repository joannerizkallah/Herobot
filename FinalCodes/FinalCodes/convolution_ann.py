# -*- coding: utf-8 -*-
"""Convolution_ANN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T-sSuRnZq3KpN2qX6ulb8lyPv6rZR8W1

Importing libraries
"""

from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.preprocessing import image
from tensorflow.keras.optimizers import RMSprop
import matplotlib.pyplot as plt
import tensorflow as tf
import numpy as np
import cv2
import os

img = image.load_img("drive/MyDrive/Dataset/Training/Human/3.jpeg")
plt.imshow(img)

cv2.imread("drive/MyDrive/Dataset/Training/Human/3.jpeg") #all our photos need to be 1024x768

train = ImageDataGenerator(rescale = 1/255)
validation = ImageDataGenerator(rescale = 1/255)

train_dataset = train.flow_from_directory('drive/MyDrive/Dataset/Training/', 
                                          target_size = (200,200), 
                                          batch_size = 50,
                                          class_mode = 'binary')
validation_dataset = validation.flow_from_directory('drive/MyDrive/Dataset/Validation/', 
                                                    target_size = (200,200), 
                                                    batch_size = 50, 
                                                    class_mode = 'binary')

train_dataset.class_indices

train_dataset.classes #you can see that the images containing human are labelled 0
#and no humans are labelled 1

"""Building the Convolutional Neural Network"""

model = tf.keras.models.Sequential([ tf.keras.layers.Conv2D(16,(3,3), activation = 'relu', input_shape = (200,200,3)),
                                    tf.keras.layers.MaxPool2D(2,2),
                                    #
                                    tf.keras.layers.Conv2D(32,(3,3), activation = 'relu'),
                                    tf.keras.layers.MaxPool2D(2,2),
                                    #
                                    tf.keras.layers.Conv2D(64,(3,3), activation = 'relu'),
                                    tf.keras.layers.MaxPool2D(2,2),
                                    ##
                                    tf.keras.layers.Flatten(),
                                    ##
                                    tf.keras.layers.Dense(512,activation = 'relu')
                                    ])
model.add(tf.keras.layers.Dense(units = 1, activation = 'sigmoid')) #output layer

"""Training the CNN"""

model.compile(loss = 'binary_crossentropy', optimizer = 'adam', metrics = ['accuracy'])

model_fit = model.fit(train_dataset, batch_size = 32, epochs = 20,  validation_data =  validation_dataset)

dir_path = 'drive/MyDrive/Dataset/Testing/Human'
for i in os.listdir(dir_path) :
    path = dir_path+'/'+ i
    if path == 'Dataset/Testing/Human/.ipynb_checkpoints':
      continue
    img = image.load_img(dir_path+'/'+ i, target_size = (200,200,3))
    plt.imshow(img)
    plt.show()
    X = image.img_to_array(img)
    X = np.expand_dims(X,axis = 0)
    images = np.vstack([X])
    prediction = model.predict(images)
    if prediction == 0:
      print("Human")
    else :
      print("No human")